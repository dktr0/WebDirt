// Generated by purs bundle 0.14.4
var PS = {};
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var apply = function (dict) {
      return dict.apply;
  };
  exports["apply"] = apply;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];          
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var bind = function (dict) {
      return dict.bind;
  };
  exports["bind"] = bind;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var semigroupoidFn = {
      compose: function (f) {
          return function (g) {
              return function (x) {
                  return f(g(x));
              };
          };
      }
  };
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = {
      identity: function (x) {
          return x;
      },
      Semigroupoid0: function () {
          return Control_Semigroupoid.semigroupoidFn;
      }
  };
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["ap"] = ap;
})(PS);
(function(exports) {
  "use strict";

  exports.map_ = function (f) {
    return function (a) {
      return function () {
        return f(a());
      };
    };
  };

  exports.pure_ = function (a) {
    return function () {
      return a;
    };
  };

  exports.bind_ = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Control.Monad.ST.Internal"] = PS["Control.Monad.ST.Internal"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Monad.ST.Internal"] = $PS["Control.Monad.ST.Internal"] || {};
  var exports = $PS["Control.Monad.ST.Internal"];
  var $foreign = $PS["Control.Monad.ST.Internal"];
  var Control_Monad = $PS["Control.Monad"];
  var functorST = {
      map: $foreign.map_
  };
  var monadST = {
      Applicative0: function () {
          return applicativeST;
      },
      Bind1: function () {
          return bindST;
      }
  };
  var bindST = {
      bind: $foreign.bind_,
      Apply0: function () {
          return applyST;
      }
  };
  var applyST = {
      apply: Control_Monad.ap(monadST),
      Functor0: function () {
          return functorST;
      }
  };
  var applicativeST = {
      pure: $foreign.pure_,
      Apply0: function () {
          return applyST;
      }
  };
  exports["monadST"] = monadST;
})(PS);
(function(exports) {
  "use strict";

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Function.Uncurried"] = $PS["Data.Function.Uncurried"] || {};
  var exports = $PS["Data.Function.Uncurried"];
  var $foreign = $PS["Data.Function.Uncurried"];
  exports["runFn4"] = $foreign.runFn4;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];                 
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];                  
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad = $PS["Control.Monad"];                  
  var monadEffect = {
      Applicative0: function () {
          return applicativeEffect;
      },
      Bind1: function () {
          return bindEffect;
      }
  };
  var bindEffect = {
      bind: $foreign.bindE,
      Apply0: function () {
          return applyEffect;
      }
  };
  var applyEffect = {
      apply: Control_Monad.ap(monadEffect),
      Functor0: function () {
          return functorEffect;
      }
  };
  var applicativeEffect = {
      pure: $foreign.pureE,
      Apply0: function () {
          return applyEffect;
      }
  };
  var functorEffect = {
      map: Control_Applicative.liftA1(applicativeEffect)
  };
  exports["applicativeEffect"] = applicativeEffect;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Foreign"] = $PS["Foreign"] || {};
  var exports = $PS["Foreign"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var unsafeToForeign = Unsafe_Coerce.unsafeCoerce;
  var unsafeFromForeign = Unsafe_Coerce.unsafeCoerce;
  exports["unsafeToForeign"] = unsafeToForeign;
  exports["unsafeFromForeign"] = unsafeFromForeign;
})(PS);
(function(exports) {
  "use strict";

  exports._copyST = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f();
  };

  exports._foldM = function (bind) {
    return function (f) {
      return function (mz) {
        return function (m) {
          var acc = mz;
          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            if (hasOwnProperty.call(m, k)) {
              acc = bind(acc)(g(k));
            }
          }
          return acc;
        };
      };
    };
  };

  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function(exports) {
  "use strict";

  exports.poke = function (k) {
    return function (v) {
      return function (m) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };

  exports["delete"] = function (k) {
    return function (m) {
      return function () {
        delete m[k];
        return m;
      };
    };
  };
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Foreign.Object.ST"] = $PS["Foreign.Object.ST"] || {};
  var exports = $PS["Foreign.Object.ST"];
  var $foreign = $PS["Foreign.Object.ST"];
  exports["poke"] = $foreign.poke;
  exports["delete"] = $foreign["delete"];
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Foreign.Object"] = $PS["Foreign.Object"] || {};
  var exports = $PS["Foreign.Object"];
  var $foreign = $PS["Foreign.Object"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Foreign_Object_ST = $PS["Foreign.Object.ST"];              
  var thawST = $foreign["_copyST"];
  var mutate = function (f) {
      return function (m) {
          return $foreign.runST(function __do() {
              var s = thawST(m)();
              f(s)();
              return s;
          });
      };
  };
  var lookup = Data_Function_Uncurried.runFn4($foreign["_lookup"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var insert = function (k) {
      return function (v) {
          return mutate(Foreign_Object_ST.poke(k)(v));
      };
  };
  var foldM = function (dictMonad) {
      return function (f) {
          return function (z) {
              return $foreign["_foldM"](Control_Bind.bind(dictMonad.Bind1()))(f)(Control_Applicative.pure(dictMonad.Applicative0())(z));
          };
      };
  };
  var union = function (m) {
      return mutate(function (s) {
          return foldM(Control_Monad_ST_Internal.monadST)(function (s$prime) {
              return function (k) {
                  return function (v) {
                      return Foreign_Object_ST.poke(k)(v)(s$prime);
                  };
              };
          })(s)(m);
      });
  };
  var $$delete = function (k) {
      return mutate(Foreign_Object_ST["delete"](k));
  };
  var alter = function (f) {
      return function (k) {
          return function (m) {
              var v = f(lookup(k)(m));
              if (v instanceof Data_Maybe.Nothing) {
                  return $$delete(k)(m);
              };
              if (v instanceof Data_Maybe.Just) {
                  return insert(k)(v.value0)(m);
              };
              throw new Error("Failed pattern match at Foreign.Object (line 209, column 15 - line 211, column 25): " + [ v.constructor.name ]);
          };
      };
  };
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["alter"] = alter;
  exports["union"] = union;
  exports["empty"] = $foreign.empty;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {};
  var exports = $PS["Record.Unsafe"];
  var $foreign = $PS["Record.Unsafe"];
  exports["unsafeGet"] = $foreign.unsafeGet;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Record"] = $PS["Record"] || {};
  var exports = $PS["Record"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var get = function (dictIsSymbol) {
      return function (dictCons) {
          return function (l) {
              return function (r) {
                  return Record_Unsafe.unsafeGet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
              };
          };
      };
  };
  exports["get"] = get;
})(PS);
(function(exports) {
  "use strict";

  exports.copyRecord = function(rec) {
    var copy = {};
    for (var key in rec) {
      if ({}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }
    return copy;
  };
})(PS["Record.Builder"] = PS["Record.Builder"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Record.Builder"] = $PS["Record.Builder"] || {};
  var exports = $PS["Record.Builder"];
  var $foreign = $PS["Record.Builder"];
  var Control_Category = $PS["Control.Category"];
  var categoryBuilder = Control_Category.categoryFn;
  var build = function (v) {
      return function (r1) {
          return v($foreign.copyRecord(r1));
      };
  };
  exports["build"] = build;
  exports["categoryBuilder"] = categoryBuilder;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Type.Proxy"] = $PS["Type.Proxy"] || {};
  var exports = $PS["Type.Proxy"];
  var $$Proxy = (function () {
      function $$Proxy() {

      };
      $$Proxy.value = new $$Proxy();
      return $$Proxy;
  })();
  exports["Proxy"] = $$Proxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Simple.JSON"] = $PS["Simple.JSON"] || {};
  var exports = $PS["Simple.JSON"];
  var Control_Category = $PS["Control.Category"];
  var Foreign = $PS["Foreign"];
  var Record_Builder = $PS["Record.Builder"];
  var Type_Proxy = $PS["Type.Proxy"];
  var writeImplFields = function (dict) {
      return dict.writeImplFields;
  };
  var writeImpl = function (dict) {
      return dict.writeImpl;
  };
  var writeForeignString = {
      writeImpl: Foreign.unsafeToForeign
  };
  var writeForeignNumber = {
      writeImpl: Foreign.unsafeToForeign
  };
  var writeForeignInt = {
      writeImpl: Foreign.unsafeToForeign
  };
  var writeForeignForeign = {
      writeImpl: Control_Category.identity(Control_Category.categoryFn)
  };
  var write = function (dictWriteForeign) {
      return writeImpl(dictWriteForeign);
  };
  var recordWriteForeign = function (dictRowToList) {
      return function (dictWriteForeignFields) {
          return {
              writeImpl: function (rec) {
                  var steps = writeImplFields(dictWriteForeignFields)(Type_Proxy["Proxy"].value)(rec);
                  return Foreign.unsafeToForeign(Record_Builder.build(steps)({}));
              }
          };
      };
  };
  var nilWriteForeignFields = {
      writeImplFields: function (v) {
          return function (v1) {
              return Control_Category.identity(Record_Builder.categoryBuilder);
          };
      }
  };
  exports["write"] = write;
  exports["writeImpl"] = writeImpl;
  exports["writeForeignForeign"] = writeForeignForeign;
  exports["writeForeignString"] = writeForeignString;
  exports["writeForeignInt"] = writeForeignInt;
  exports["writeForeignNumber"] = writeForeignNumber;
  exports["recordWriteForeign"] = recordWriteForeign;
  exports["nilWriteForeignFields"] = nilWriteForeignFields;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Option"] = $PS["Option"] || {};
  var exports = $PS["Option"];
  var Control_Category = $PS["Control.Category"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Foreign = $PS["Foreign"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Record_1 = $PS["Record"];
  var Record_Builder = $PS["Record.Builder"];
  var Simple_JSON = $PS["Simple.JSON"];                            
  var $$Proxy = (function () {
      function $$Proxy() {

      };
      $$Proxy.value = new $$Proxy();
      return $$Proxy;
  })();
  var writeForeignOptionNil = {
      writeForeignOption: function (v) {
          return function (v1) {
              return Foreign.unsafeToForeign({});
          };
      }
  };
  var writeForeignOption = function (dict) {
      return dict.writeForeignOption;
  };
  var writeForeignOptionOption = function (dictRowToList) {
      return function (dictWriteForeignOption) {
          return {
              writeImpl: writeForeignOption(dictWriteForeignOption)($$Proxy.value)
          };
      };
  };
  var required = function (record$prime) {
      return record$prime.required;
  };
  var recordFromRecordAndOption = function (record) {
      return {
          optional: record.optional,
          required: record.required
      };
  };
  var optional = function (record$prime) {
      return record$prime.optional;
  };
  var writeForeignRecordRequiredOptional = function (dictWriteForeign) {
      return function (dictWriteForeign1) {
          return {
              writeImpl: function (record) {
                  var requiredForeign = Simple_JSON.writeImpl(dictWriteForeign1)(required(record));
                  var requiredObject = Foreign.unsafeFromForeign(requiredForeign);
                  var optionalForeign = Simple_JSON.writeImpl(dictWriteForeign)(optional(record));
                  var optionalObject = Foreign.unsafeFromForeign(optionalForeign);
                  return Foreign.unsafeToForeign(Foreign_Object.union(requiredObject)(optionalObject));
              }
          };
      };
  };
  var fromRecordRequiredNil = {
      fromRecordRequired: function (v) {
          return function (v1) {
              return Control_Category.identity(Record_Builder.categoryBuilder);
          };
      }
  };
  var fromRecordRequired = function (dict) {
      return dict.fromRecordRequired;
  };
  var fromRecordOption = function (dict) {
      return dict.fromRecordOption;
  };
  var fromRecordAny = function (dictFromRecordOption) {
      return function (dictFromRecordRequired) {
          return function (dictUnion) {
              return function (dictRowToList) {
                  return function (dictRowToList1) {
                      return {
                          "fromRecord'": function (record) {
                              return recordFromRecordAndOption({
                                  optional: fromRecordOption(dictFromRecordOption)($$Proxy.value)(record),
                                  required: Record_Builder.build(fromRecordRequired(dictFromRecordRequired)($$Proxy.value)(record))({})
                              });
                          }
                      };
                  };
              };
          };
      };
  };
  var fromRecord$prime = function (dict) {
      return dict["fromRecord'"];
  };
  var empty = Foreign_Object.empty;
  var fromRecordOptionNil = {
      fromRecordOption: function (v) {
          return function (v1) {
              return empty;
          };
      }
  };
  var alter$prime$prime = function (dict) {
      return dict["alter''"];
  };
  var alter$prime = function (dictIsSymbol) {
      return function (f) {
          return function (v) {
              return function (v1) {
                  var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                  var go = function (value$prime) {
                      return f(value$prime);
                  };
                  var option = Foreign_Object.alter(go)(key)(v1);
                  var value = f(Foreign_Object.lookup(key)(v1));
                  return {
                      option: option,
                      value: value
                  };
              };
          };
      };
  };                                     
  var get = function (dictIsSymbol) {
      return function (dictCons) {
          return function (proxy) {
              return function (option) {
                  var go = function (value) {
                      return value;
                  };
                  return (alter$prime(dictIsSymbol)(go)(proxy)(option)).value;
              };
          };
      };
  };                                   
  var writeForeignOptionCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictWriteForeign) {
              return function (dictWriteForeignOption) {
                  return {
                      writeForeignOption: function (v) {
                          return function (option) {
                              var value$prime = get(dictIsSymbol)()(Data_Symbol.SProxy.value)(option);
                              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                              var foreign$prime = writeForeignOption(dictWriteForeignOption)($$Proxy.value)(option);
                              var object = Foreign.unsafeFromForeign(foreign$prime);
                              if (value$prime instanceof Data_Maybe.Just) {
                                  return Foreign.unsafeToForeign(Foreign_Object.insert(key)(Simple_JSON.writeImpl(dictWriteForeign)(value$prime.value0))(object));
                              };
                              if (value$prime instanceof Data_Maybe.Nothing) {
                                  return foreign$prime;
                              };
                              throw new Error("Failed pattern match at Option (line 2399, column 33 - line 2403, column 35): " + [ value$prime.constructor.name ]);
                          };
                      }
                  };
              };
          };
      };
  };
  var insert = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictLacks) {
              return function (proxy) {
                  return function (value) {
                      return function (option) {
                          var go = function (v) {
                              return new Data_Maybe.Just(value);
                          };
                          return (alter$prime(dictIsSymbol)(go)(proxy)(option)).option;
                      };
                  };
              };
          };
      };
  };
  var fromRecordOptionCons = function (dictIsSymbol) {
      return function (dictFromRecordOption) {
          return function (dictCons) {
              return function (dictCons1) {
                  return function (dictLacks) {
                      return {
                          fromRecordOption: function (v) {
                              return function (record) {
                                  var option = fromRecordOption(dictFromRecordOption)($$Proxy.value)(record);
                                  var value = Record_1.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(record);
                                  return insert(dictIsSymbol)()()(Data_Symbol.SProxy.value)(value)(option);
                              };
                          }
                      };
                  };
              };
          };
      };
  };                                           
  var alter = function (dictAlter) {
      return function (record) {
          return function (option) {
              return alter$prime$prime(dictAlter)(record)(option);
          };
      };
  };
  exports["fromRecord'"] = fromRecord$prime;
  exports["writeForeignOptionOption"] = writeForeignOptionOption;
  exports["writeForeignRecordRequiredOptional"] = writeForeignRecordRequiredOptional;
  exports["fromRecordAny"] = fromRecordAny;
  exports["fromRecordOptionNil"] = fromRecordOptionNil;
  exports["fromRecordOptionCons"] = fromRecordOptionCons;
  exports["fromRecordRequiredNil"] = fromRecordRequiredNil;
  exports["writeForeignOptionNil"] = writeForeignOptionNil;
  exports["writeForeignOptionCons"] = writeForeignOptionCons;
})(PS);
(function(exports) {
  "use strict";

  exports._newWebDirt = args => () => new WebDirt.WebDirt(args);

  exports.initializeWebAudio = wd => () => wd.initializeWebAudio();

  exports._playSample = wd => msg => () => wd.playSample(msg);
})(PS["WebDirt"] = PS["WebDirt"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["WebDirt"] = $PS["WebDirt"] || {};
  var exports = $PS["WebDirt"];
  var $foreign = $PS["WebDirt"];
  var Option = $PS["Option"];
  var Simple_JSON = $PS["Simple.JSON"];                
  var playSample = function (wd) {
      return function (ps) {
          return $foreign["_playSample"](wd)(Simple_JSON.write(Option.writeForeignRecordRequiredOptional(Option.writeForeignOptionOption()(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "bandf";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "bandq";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "begin";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "buffer";
              }
          })()(Simple_JSON.writeForeignForeign)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "coarse";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "crush";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "cut";
              }
          })()(Simple_JSON.writeForeignInt)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "cutoff";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "delay";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "delayfeedback";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "delaytime";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "end";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "gain";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "hcutoff";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "hresonance";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "loop";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "n";
              }
          })()(Simple_JSON.writeForeignInt)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "note";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "nudge";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "overgain";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "pan";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "resonance";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "s";
              }
          })()(Simple_JSON.writeForeignString)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "shape";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "speed";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "unit";
              }
          })()(Simple_JSON.writeForeignString)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "vowel";
              }
          })()(Simple_JSON.writeForeignString)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "when";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
              reflectSymbol: function () {
                  return "whenPosix";
              }
          })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionNil)))))))))))))))))))))))))))))))(Simple_JSON.recordWriteForeign()(Simple_JSON.nilWriteForeignFields)))(ps));
      };
  };
  var newWebDirt = function (os) {
      return $foreign["_newWebDirt"](Simple_JSON.write(Option.writeForeignRecordRequiredOptional(Option.writeForeignOptionOption()(Option.writeForeignOptionCons({
          reflectSymbol: function () {
              return "audioContext";
          }
      })()(Simple_JSON.writeForeignForeign)(Option.writeForeignOptionCons({
          reflectSymbol: function () {
              return "destination";
          }
      })()(Simple_JSON.writeForeignForeign)(Option.writeForeignOptionCons({
          reflectSymbol: function () {
              return "latency";
          }
      })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
          reflectSymbol: function () {
              return "maxLateness";
          }
      })()(Simple_JSON.writeForeignNumber)(Option.writeForeignOptionCons({
          reflectSymbol: function () {
              return "sampleFolder";
          }
      })()(Simple_JSON.writeForeignString)(Option.writeForeignOptionCons({
          reflectSymbol: function () {
              return "sampleMapUrl";
          }
      })()(Simple_JSON.writeForeignString)(Option.writeForeignOptionNil))))))))(Simple_JSON.recordWriteForeign()(Simple_JSON.nilWriteForeignFields)))(os));
  };
  exports["newWebDirt"] = newWebDirt;
  exports["playSample"] = playSample;
  exports["initializeWebAudio"] = $foreign.initializeWebAudio;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Option = $PS["Option"];
  var WebDirt = $PS["WebDirt"];                
  var makeASound = function (wd) {
      return WebDirt.playSample(wd)(Option["fromRecord'"](Option.fromRecordAny(Option.fromRecordOptionCons({
          reflectSymbol: function () {
              return "s";
          }
      })(Option.fromRecordOptionNil)()()())(Option.fromRecordRequiredNil)()()())({
          s: "gtr"
      }));
  };
  var main = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
  var launch = function __do() {
      var wd = WebDirt.newWebDirt(Option["fromRecord'"](Option.fromRecordAny(Option.fromRecordOptionCons({
          reflectSymbol: function () {
              return "sampleFolder";
          }
      })(Option.fromRecordOptionCons({
          reflectSymbol: function () {
              return "sampleMapUrl";
          }
      })(Option.fromRecordOptionNil)()()())()()())(Option.fromRecordRequiredNil)()()())({
          sampleMapUrl: "samples/sampleMap.json",
          sampleFolder: "samples"
      }))();
      WebDirt.initializeWebAudio(wd)();
      return wd;
  };
  exports["main"] = main;
  exports["launch"] = launch;
  exports["makeASound"] = makeASound;
})(PS);
PS["Main"].main();